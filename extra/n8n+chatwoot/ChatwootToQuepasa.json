{
  "name": "ChatwootToQuepasa",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "from-chatwoot",
        "responseMode": "responseNode",
        "options": {}
      },
      "name": "From ChatWoot",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -3920,
        1360
      ],
      "webhookId": "ae8993fc-1ab0-4de5-90ce-0eb59a2b5c7d",
      "id": "3b4e457f-eb9a-4952-a2ac-033c4f912463"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "only for messages",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Not Message Created Event !",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -2140,
        3400
      ],
      "id": "15f5ddc9-0bdf-4b9f-bc60-b9fea6f59ceb"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "only for outbound messages",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Is Incoming !",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1460,
        1240
      ],
      "id": "346082d9-738b-473a-a9ed-6cf4c1ce597f"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "do not forwarding private messages",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Is Private !",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1200,
        1240
      ],
      "id": "bb18d275-0386-43b7-a251-0eb908766b83"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "do not forwarding bot messages",
        "options": {
          "responseCode": 200
        }
      },
      "name": "From Customer !",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -940,
        1240
      ],
      "id": "2a03ce36-0684-47a1-b72a-ce98379da334"
    },
    {
      "parameters": {},
      "name": "Message Created Event",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2100,
        1000
      ],
      "id": "0a2a34fd-f358-4ccc-b77a-4f7817b7a98c"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload.content}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "42d61b3e-1e60-448f-8348-8bbdbc78df93",
      "name": "Text Message ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -380,
        960
      ]
    },
    {
      "parameters": {},
      "name": "Conversation Created Event",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2500,
        2420
      ],
      "id": "ec040ce1-dae1-44d1-81f8-f9cc94561f92"
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {}
      },
      "id": "c3cbbf2e-0d3d-4be2-a5c4-8c5b3b4c23b3",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        720,
        460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload.attachment}}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "name": "Text Only ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1260,
        1180
      ],
      "id": "15df4082-9e5c-4423-84f6-e73f5cbfddbf"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"body\"][\"message_type\"]}}",
              "value2": "outgoing"
            }
          ],
          "number": [
            {
              "value1": "={{$json[\"body\"][\"message_type\"]}}",
              "operation": "equal",
              "value2": 1
            }
          ]
        },
        "combineOperation": "any"
      },
      "name": "Is Outgoing Message ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1720,
        1000
      ],
      "id": "82946525-8536-44fc-9223-4509c33caa4f"
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {}
      },
      "id": "d027eb3c-c983-4c3e-8b57-117d534ccc45",
      "name": "Normal Exit (GNE)",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1820,
        2440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json[\"body\"][\"private\"]}}"
            }
          ]
        }
      },
      "name": "Is Public ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1460,
        980
      ],
      "id": "3ca0e4cf-c0d2-4df7-962e-6058482516da"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"body\"][\"sender\"][\"type\"]}}",
              "operation": "notEqual",
              "value2": "agent_bot"
            },
            {
              "value1": "={{$json[\"body\"][\"sender\"][\"name\"]?.toLowerCase()}}",
              "operation": "notContains",
              "value2": "whatsapp outgoing"
            }
          ]
        }
      },
      "name": "Is Not From Sincronize Bot?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1200,
        960
      ],
      "id": "496f7c5e-0523-4e5b-9a16-c1dbb8227f48"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload.content}}",
              "operation": "startsWith",
              "value2": "/"
            }
          ]
        }
      },
      "id": "15387080-d41b-4731-a7ad-07ffd096aa83",
      "name": "If Control Message",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -80,
        820
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_QUEPASACHATCONTROL'] ?? 1003 }}"
      },
      "id": "a26c799c-b571-41c3-864a-d5a1371d4429",
      "name": "Quepasa Chat Control Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        460,
        460
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"body\"][\"messages\"][0][\"sender_type\"]}}",
              "value2": "User"
            }
          ]
        }
      },
      "id": "d59be02b-a8cf-4476-a311-52d47047fdbc",
      "name": "Sent by agent ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -2220,
        2420
      ],
      "notesInFlow": true,
      "notes": "Quando vem vazio Ã© porque a conversa foi criada sem mensagem, no caso criado pelo fluxo. ou seja, criada pelo cliente."
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json.extra.cwhost}} }}/api/v1/accounts/{{$json.extra.account}}/conversations/{{$json.body.id}}/toggle_status",
        "allowUnauthorizedCerts": true,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "status",
              "value": "open"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{$json.extra.utoken}}"
            }
          ]
        }
      },
      "name": "Open Conversation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        -2020,
        2340
      ],
      "id": "288f37e4-67cd-4a92-b24e-e76252d21767",
      "continueOnFail": true,
      "notes": "Important to use \"source_id\" to respond messages"
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_QUEPASAINBOXCONTROL'] ?? 1001 }}"
      },
      "id": "628de329-65e7-49f6-ac4c-81c9db5b8c9c",
      "name": "Throw To Quepasa Inbox Control Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -620,
        720
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"body\"][\"event\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "message_updated"
            }
          ]
        },
        "fallbackOutput": 3
      },
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [
        -2700,
        3120
      ],
      "id": "a344898d-20e6-4e5e-bfdd-8e774ef53240"
    },
    {
      "parameters": {},
      "id": "8d2eda76-1f8a-4dfb-b56e-1b37f7f1818d",
      "name": "Message Update Event",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2100,
        2820
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.body?.content_attributes?.deleted??false}}",
              "value2": true
            }
          ]
        }
      },
      "id": "77a80e12-7951-48f7-906c-8556a0e428e2",
      "name": "If Deleted ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1880,
        2820
      ]
    },
    {
      "parameters": {},
      "id": "ba4b91b1-f7d7-4dec-850c-4c197046c1ae",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1040,
        960
      ]
    },
    {
      "parameters": {},
      "id": "c0b4da2f-ab7a-4206-973b-ed022a8bf80f",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        760,
        980
      ]
    },
    {
      "parameters": {
        "content": "## POSTING THROW QUEPASA\n",
        "height": 701.60213414902,
        "width": 1034.409491520598
      },
      "id": "34df2a14-6fcb-436c-817f-4aaccd00807b",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        740,
        820.4240879460162
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "extra.qptoken",
              "value": "={{ $json.query.qptoken ?? $json.query.identifier }}"
            },
            {
              "name": "extra.qphost",
              "value": "={{ $json.query.qphost ?? 'http://127.0.0.1:31000' }}"
            },
            {
              "name": "extra.cwhost",
              "value": "={{ $json.query.cwhost ?? 'http://127.0.0.1:3000' }}"
            },
            {
              "name": "extra.n8nhost",
              "value": "={{ $json.query.n8nhost ?? 'http://127.0.0.1:5678' }}"
            },
            {
              "name": "extra.inbox",
              "value": "={{ $json.query.inbox ?? $json.body.inbox_id ?? $json.body.inbox?.id }}"
            },
            {
              "name": "extra.account",
              "value": "={{ $json.query.account ?? $json.body.account_id ?? $json.body.account?.id ?? $json.body.messages[0]?.account_id }}"
            },
            {
              "name": "extra.identifier",
              "value": "={{ $json.query.identifier }}"
            },
            {
              "name": "extra.utoken",
              "value": "={{ $json.query.utoken }}"
            },
            {
              "name": "extra.atoken",
              "value": "={{ $json.query.atoken }}"
            }
          ]
        },
        "options": {}
      },
      "id": "24b19414-3d81-4c10-81cd-33be3f460a59",
      "name": "Defaults",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -3740,
        1360
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {}
      },
      "id": "f07a2703-b99d-41d0-a794-f904650e9591",
      "name": "Normal Exit (CUP)",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1800,
        2120
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_CHATWOOTPROFILEUPDATE'] ?? 1004 }}"
      },
      "id": "96245e9f-fbd0-4889-a824-1f49d1608f0f",
      "name": "Throw To Profile Update Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -1980,
        2120
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT csat_survey_enabled FROM inboxes WHERE id = {{ $json.extra.inbox }}; ",
        "additionalFields": {}
      },
      "id": "1ab77661-a839-4c54-9373-849142535bf0",
      "name": "Enabled CSAT ?",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        -540,
        1760
      ],
      "credentials": {
        "postgres": {
          "id": "vSgNoxPsTNRz4Pxu",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "2711cc38-1e16-4405-a0ec-f486716a52e6",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        -360,
        1700
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "f63785c2-1ccb-4562-b3e2-44f224e7ac21",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        160,
        1660
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.csat_survey_enabled }}",
              "value2": true
            }
          ]
        }
      },
      "id": "cb5a03cb-5a6c-49bd-a28f-e2d8b9a02e82",
      "name": "Use CSAT ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -200,
        1700
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.body.status }}",
              "value2": "resolved"
            }
          ]
        }
      },
      "id": "80ad9f98-51c0-4895-b8ef-1152befec09b",
      "name": "If Conversation Resolved",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -2120,
        1700
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "qphost",
              "value": "={{$json.extra?.qphost}}"
            },
            {
              "name": "qptoken",
              "value": "={{$json.extra?.qptoken}}"
            },
            {
              "name": "cwhost",
              "value": "={{$json.extra?.cwhost}}"
            },
            {
              "name": "utoken",
              "value": "={{$json.extra?.utoken}}"
            },
            {
              "name": "account",
              "value": "={{$json.extra?.account}}"
            },
            {
              "name": "contactid",
              "value": "={{$json.body?.meta?.sender?.id}}"
            },
            {
              "name": "chatid",
              "value": "={{$json.chatid}}"
            }
          ]
        },
        "options": {}
      },
      "id": "c438df6a-7627-481a-b7d7-5049b10aad1b",
      "name": "Set Update Contact Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -2160,
        2120
      ]
    },
    {
      "parameters": {},
      "name": "Conversation Status Changed  Event",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2640,
        1920
      ],
      "id": "acfabf97-6437-498b-a76b-a6338f875bdd"
    },
    {
      "parameters": {
        "content": "## POST RESOLVED MESSAGE\n* to disable, remove that link",
        "height": 565.5824733063735,
        "width": 3071.1267498581306
      },
      "id": "b9f188e7-9422-4d9a-a3b4-3b5556bc43a7",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2380,
        1500
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT uuid FROM conversations WHERE account_id = {{ $json.extra.account }} and display_id = {{ $json.body.idÂ }};",
        "additionalFields": {}
      },
      "id": "8c115e28-45ab-4e54-a8e4-45faf2754fe5",
      "name": "Getting UUID",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        -20,
        1580
      ],
      "credentials": {
        "postgres": {
          "id": "vSgNoxPsTNRz4Pxu",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {},
      "id": "2338c2ab-dc60-431f-aad6-cc28eb8e6372",
      "name": "No Operation, do nothing3",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -720,
        1680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.body.meta?.sender?.custom_attributes?.hasOwnProperty('skipevaluation') }}",
              "value2": true
            },
            {
              "value1": "={{ $json.body.meta?.sender?.custom_attributes?.skipevaluation ?? false }}",
              "value2": true
            }
          ]
        }
      },
      "id": "a533d55e-c0a2-4ac9-be66-06ab24236cb1",
      "name": "Skip Evaluation By Contact",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -900,
        1660
      ]
    },
    {
      "parameters": {},
      "id": "4ebeef69-8929-4f6c-9e0a-5b63f00a2012",
      "name": "Evaluation Message Payload Ready To Quepasa",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        540,
        1660
      ]
    },
    {
      "parameters": {
        "jsCode": "function hex2a(hexx) {\n    var hex = hexx.toString(); //force conversion\n    var str = '';\n    for (var i = 0; i < hex.length; i += 2)\n        str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n    return str;\n}\n\nfor(let index in items) \n{ \n    if(items[index].json?.chatid){\n        continue;\n    }\n\n    let body = items[index].json[\"body\"];\n    if(body) \n    {\n        // trying to get from external identifier\n        let chatid = body.meta?.sender?.identifier;\n        if(!chatid)\n        {\n            // trying to get from quepasa custom property\n            chatid = body.meta?.sender?.custom_attributes?.quepasa;            \n            if(!chatid)\n            {\n                // trying to get from e-mail\n                chatid = body.meta?.sender?.email;            \n                if(!chatid)\n                {\n                    // trying to unhex from source_id\n                    if(body.contact_inbox?.source_id && body.contact_inbox.source_id.includes(\"@\")){\n                        chatid = hex2a(body.contact_inbox.source_id)\n                    }\n                    \n                    if(!chatid)\n                    {                    \n                        // trying to get from phone number \n                        chatid = body.meta?.sender?.phone_number;\n                        if (chatid) { \n                          chatid += '@s.whatsapp.net';\n                          if (chatid.startsWith('+')) chatid = chatid.substring(1);\n                        }\n                    }\n                }\n            }\n        }\n        items[index].json.chatid = chatid;\n    }\n}\n\nreturn items;"
      },
      "id": "b4f23156-ce6b-4ec2-936b-5750bd02a02f",
      "name": "Getting ChatId From Custom|Email|Source|Phone",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -2360,
        2120
      ]
    },
    {
      "parameters": {},
      "name": "Post Resolved Message",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2300,
        1780
      ],
      "id": "335fc8a9-db27-4e82-897a-c77b7365285a"
    },
    {
      "parameters": {
        "jsCode": "const response = [];\nfor (const item of $input.all()) {\n  const body = item.json.body;\n  if (body) {     \n    let chatId = body.conversation.meta?.sender?.identifier;    \n    if (!chatId)\n    {\n      chatId = body.conversation.meta?.sender?.custom_attributes?.quepasa;\n      if (!chatId) {\n        chatId = body.conversation.meta?.sender?.phone_number;\n      }\n    }\n\n    // attachments\n    for (let message of body.conversation.messages) \n    {  \n      if (message.content_type === 'integrations' && message.content_attributes?.type === 'dyte')      \n        message.content += '\\r\\n *** https://app.dyte.in/meeting/stage/' + message.content_attributes?.data.room_name;      \n      \n      if (message.content) {\n\n        // leading with \\ at SHIFT+ENTER\n        message.content = message.content.replace(/\\n\\\\/g,\"\\n\").replace(/ \\\\/g,\"\");\n        \n        const payload = {        \n          token: item.json.extra.token,\n          chatid: chatId,\n          messageid: message.id,\n          inreply: message.content_attributes?.in_reply_to_external_id,\n          \n          // dont used for nothing, marked for remove\n          sourceid: body.conversation.contact_inbox.source_id,\n          \n          conversationid: body.conversation.id,\n          content: message.content\n        };\n                \n        const sender = message.sender?.available_name || message.sender?.name || 'Auto Atendimento';\n        \n        const customs = body.conversation.meta?.sender?.custom_attributes;\n        const pat = !((customs?.hasOwnProperty('skipagenttitle') ?? false) && (customs?.skipagenttitle ?? false));\n\n        if (pat) payload.sender = sender;\n                \n        const msgItem = { \n          payload: payload,\n          extra: item.json.extra\n        };\n        response.push(msgItem);\n      }\n\n      if (message.attachments) {\n        let counter = 0;\n        for (let attach of message.attachments) \n        {\n          const payload = {\n            token: item.json.extra.token,\n            chatid: chatId,\n            messageid: message.id + '-a' + counter,          \n            attachment: attach.data_url\n          };\n          const msgItem = { \n            payload: payload,\n            extra: item.json.extra\n          };\n          response.push(msgItem);\n          counter++;\n        }\n      }      \n    }\n  }\n}\n\nreturn response;"
      },
      "id": "e2ce9b2c-47ba-46ba-9652-87815a5cb34c",
      "name": "Payload",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -620,
        960
      ]
    },
    {
      "parameters": {
        "baseUrl": "={{$json.extra.qphost}}",
        "token": "={{$json.extra.qptoken}}",
        "operation": "revoke",
        "messageId": "={{ $json.extra.account }}-{{ $json.extra.inbox }}-{{ $json.body.id }}"
      },
      "id": "28282e27-9966-4cbe-ad38-6b1a72fe7f9b",
      "name": "Quepasa Revoke",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        -1220,
        2760
      ],
      "retryOnFail": true,
      "maxTries": 2
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "payload.chatid",
              "value": "={{ $json.body.meta.sender.identifier }}"
            },
            {
              "name": "payload.messageid",
              "value": "={{ $json.body.id }}-eval"
            },
            {
              "name": "extra.qphost",
              "value": "={{ $json.extra.qphost }}"
            },
            {
              "name": "extra.qptoken",
              "value": "={{ $json.extra.qptoken }}"
            },
            {
              "name": "extra.account",
              "value": "={{ $json.extra.account }}"
            },
            {
              "name": "extra.inbox",
              "value": "={{ $json.extra.inbox }}"
            },
            {
              "name": "payload.content",
              "value": "=*{{ $json[\"body\"][\"meta\"][\"sender\"][\"name\"] }}* seu atendimento de Ticket de nÂº *{{ $json.body.id }}* foi finalizado ! Caso tenha alguma dÃºvida sÃ³ enviar uma nova mensagem !\n\nAproveite e avalie nosso atendimento. Sua opiniÃ£o Ã© muito importante para nÃ³s e nos ajudarÃ¡ a identificar Ã¡reas de melhorias a fim de continuar oferecendo um serviÃ§o de qualidade. ð\n\nAvalie meu atendimento !\n{{ ($json.extra.cwpublic ?? $env[\"C8Q_CW_PUBLIC_URL\"] ?? $json.extra.cwhost).trimEnd('/') }}/survey/responses/{{ $json.uuid }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7c7e047c-7fa4-4ba7-8784-51d6178d7799",
      "name": "Payload With CSAT",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        340,
        1560
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra.qphost",
              "value": "={{ $json.extra.qphost }}"
            },
            {
              "name": "extra.qptoken",
              "value": "={{ $json.extra.qptoken }}"
            },
            {
              "name": "extra.account",
              "value": "={{ $json.extra.account }}"
            },
            {
              "name": "extra.inbox",
              "value": "={{ $json.extra.inbox }}"
            },
            {
              "name": "payload.chatid",
              "value": "={{ $json.body.meta.sender.identifier }}"
            },
            {
              "name": "payload.messageid",
              "value": "={{ $json.body.id }}-eval"
            },
            {
              "name": "payload.content",
              "value": "-----------------------------------------------------\nSeu atendimento foi marcado como *concluÃ­do* !\nQualquer mensagem ou reaÃ§Ã£o apÃ³s este anÃºncio, irÃ¡ iniciar uma *nova* conversa.\n-----------------------------------------------------"
            }
          ]
        },
        "options": {}
      },
      "id": "5672b3d3-e556-4d0f-8a0a-ef0e24ff2cee",
      "name": "Payload Without CSAT",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        340,
        1720
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT account_id FROM inboxes WHERE id = '{{ $json.extra.inbox }}'",
        "additionalFields": {}
      },
      "id": "9bebb0cc-f20f-4208-9c2c-ff4c7677c959",
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        -1560,
        1780
      ],
      "credentials": {
        "postgres": {
          "id": "vSgNoxPsTNRz4Pxu",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{extra.account}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "d1523ac7-77b9-46dc-8df9-17c8858364bc",
      "name": "Account Found ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1760,
        1660
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "extra.account",
              "value": "={{ $json.account_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "0a972e54-07be-4d8a-b98c-fccd93d9bc41",
      "name": "Set Account in Query",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -1400,
        1780
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "9ab8f3fb-0e78-4ada-b456-73af6293bd1b",
      "name": "Merge Account Id",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        -1240,
        1700
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.body.conversation?.meta.sender.identifier?.toLowerCase() }}",
              "value2": "={{ $env[\"C8Q_QP_CONTACT\"] ?? 'control@quepasa.io' }}"
            },
            {
              "value1": "={{ $json.body.meta?.sender.name?.toLowerCase() }}",
              "operation": "contains",
              "value2": "quepasa control"
            },
            {
              "value1": "={{ $json.body.conversation?.meta.sender.name?.toLowerCase() }}",
              "operation": "contains",
              "value2": "quepasa control"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "3f927d9b-4924-4b20-a569-dea65247e1f1",
      "name": "From Quepasa Control ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -900,
        940
      ]
    },
    {
      "parameters": {
        "content": "## (1.0.16) Updates\n* added skip agent title contact variable\n\n## Recommendations \n* Remember set timeout to 30 seconds\n\n",
        "height": 283.97227148249,
        "width": 612.1460280877996
      },
      "id": "1c71bcbf-fb0e-46ae-98b3-f6384668795d",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3957.674438502675,
        1037.4918730629684
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"body\"][\"message_type\"]}}",
              "value2": "outgoing"
            }
          ],
          "number": [
            {
              "value1": "={{$json[\"body\"][\"message_type\"]}}",
              "operation": "equal",
              "value2": 1
            }
          ]
        },
        "combineOperation": "any"
      },
      "name": "Is Outgoing Message ?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1660,
        2800
      ],
      "id": "16175b98-28f3-4c5e-9855-86e84e6e035c"
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"body\"][\"event\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "message_created"
            },
            {
              "value2": "conversation_status_changed",
              "output": 1
            },
            {
              "value2": "conversation_created",
              "output": 2
            }
          ]
        },
        "fallbackOutput": 3
      },
      "name": "Switch Event",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [
        -3580,
        1360
      ],
      "id": "f79ed147-6427-4d7b-bb6b-4786787ee30c"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.body.meta?.sender?.identifier ?? \"\" }}",
              "operation": "notEqual",
              "value2": "control@quepasa.io"
            },
            {
              "value1": "={{ $json.body.meta?.sender?.identifier ?? \"\" }}",
              "operation": "notEndsWith",
              "value2": "@broadcast"
            }
          ]
        }
      },
      "id": "54a7e320-f5f6-4d70-80b8-c5248c995af1",
      "name": "If Not Control & Not Broadcast",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1940,
        1680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json[\"body\"][\"private\"]}}"
            }
          ]
        }
      },
      "name": "Is Public ?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1440,
        2780
      ],
      "id": "8204fe94-d52e-43f8-8af6-3c9c8d8862ab"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.extra.pat ? !!JSON.parse($json.extra.pat.toLowerCase()) : true }}",
              "value2": true
            }
          ],
          "string": [
            {
              "value1": "={{  $json.payload.sender }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "6e4d80eb-f26f-44f3-bc34-1f7ad804623f",
      "name": "Should Prepend Agent Title ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        140,
        840
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "={{ $json.payload.sender ? '*' + $json.payload.sender.trim() + '*: ' : '' }}\n{{ $json.payload.content }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Update Content With Agent Ttitle",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        340,
        760
      ],
      "id": "f15b21f9-2a76-4413-b99c-9ee5adff41be"
    },
    {
      "parameters": {},
      "id": "d8d7f216-4205-48e4-9b1b-18eb3b546f28",
      "name": "Follow after prepend",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        540,
        860
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.body.custom_attributes?.hasOwnProperty('skipevaluation') }}",
              "value2": true
            },
            {
              "value1": "={{ $json.body.custom_attributes?.skipevaluation ?? false }}",
              "value2": true
            }
          ]
        }
      },
      "id": "515ff792-cd34-4103-babd-ee63faec65e6",
      "name": "Skip Evaluate By Conversation",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1080,
        1640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.server.verified }}",
              "value2": "={{false}}"
            }
          ]
        }
      },
      "id": "124693d6-c64c-424d-8e93-405cbe5e3f05",
      "name": "EstÃ¡ Conectado?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2320,
        1340
      ]
    },
    {
      "parameters": {
        "baseUrl": "={{ $('From ChatWoot').item.json.query.qphost }}",
        "token": "={{ $('From ChatWoot').item.json.query.identifier }}",
        "resource": "information"
      },
      "id": "330bf3d2-bf0b-4f84-b2c9-69aad43f603a",
      "name": "Get Info1",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        2080,
        1340
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.success }}",
              "value2": "={{true}}"
            }
          ]
        }
      },
      "id": "bacafe8b-ae4f-4859-8bfb-de0b486614d6",
      "name": "enviado com sucesso?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1880,
        1160
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Normal Exit (RAS)",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        3040,
        1140
      ],
      "id": "7f4eeb4a-9fc1-4f5b-a05c-5bda41620ea9"
    },
    {
      "parameters": {
        "baseUrl": "={{$json.extra.qphost}}",
        "token": "={{$json.extra.qptoken}}",
        "messageId": "={{ $json.extra.account }}-{{ $json.extra.inbox }}-{{ $json.payload.messageid ?? Math.random() }}",
        "text": "={{$json.payload.content}}",
        "chatId": "={{$json.payload.chatid}}",
        "trackId": "chatwoot",
        "inReply": "={{$json.payload.inreply}}"
      },
      "id": "7ee7ac42-8108-4e87-9a5b-e6897e3a8ad7",
      "name": "Quepasa Send Text",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        1540,
        1060
      ],
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 2000,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "baseUrl": "={{$json.extra.qphost}}",
        "token": "={{$json.extra.qptoken}}",
        "messageId": "={{ $json.extra.account }}-{{ $json.extra.inbox }}-{{ $json.payload.messageid ?? Math.random() }}",
        "method": "sendurl",
        "text": "={{$json.payload.content}}",
        "chatId": "={{$json.payload.chatid}}",
        "url": "={{$json.payload.attachment}}",
        "trackId": "chatwoot",
        "inReply": "={{$json.payload.inreply}}"
      },
      "id": "90042627-70fe-4bd1-876c-e218160bee9d",
      "name": "Quepasa Send Attach",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        1540,
        1300
      ],
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 2000,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 503
        }
      },
      "name": "Normal Exit (RAS)1",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        2860,
        1320
      ],
      "id": "63e44c76-b903-4543-8184-adbcdadd37b6"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('From ChatWoot').item.json[\"query\"][\"cwhost\"] }}/api/v1/accounts/{{ $('From ChatWoot').item.json[\"body\"][\"account\"][\"id\"]}}/conversations/{{ $('From ChatWoot').item.json[\"body\"][\"conversation\"][\"id\"] }}/messages ",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $json.server.webhooks[0].extra.utoken }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\"private\": false, \"content\": \"â O WhatsApp estÃ¡ desconectado.\\n Por favor, reabra o aplicativo e faÃ§a a leitura do cÃ³digo QR novamente.\", \"message_type\": 2, \"content_type\": \"text\"}  ",
        "options": {}
      },
      "id": "24d837a9-2610-48f6-a34f-aa63839ab3db",
      "name": "Envia DesconexÃ£o1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2580,
        1320
      ]
    }
  ],
  "pinData": {
    "From ChatWoot": [
      {
        "json": {
          "headers": {
            "accept": "application/json",
            "user-agent": "rest-client/2.1.0 (linux x86_64) ruby/3.2.2p53",
            "content-type": "application/json",
            "content-length": "3015",
            "accept-encoding": "gzip;q=1.0,deflate;q=0.6,identity;q=0.3",
            "host": "127.0.0.1:5678"
          },
          "params": {},
          "query": {
            "qphost": "http://127.0.0.1:31000",
            "identifier": "WRzeHuuuCVbTA99kLWzUqms4",
            "cwhost": "http://127.0.0.1:3000",
            "cwpublic": "chat.approachti.com.br",
            "utoken": "sAgLXqoCrq7aB34JdQTZbm4W",
            "atoken": "e7d95901c1c32094a01d838"
          },
          "body": {
            "account": {
              "id": 1,
              "name": "ApproachTI"
            },
            "additional_attributes": {},
            "content_attributes": {
              "in_reply_to": 130589,
              "in_reply_to_external_id": null
            },
            "content_type": "text",
            "content": "dasdasdasd",
            "conversation": {
              "additional_attributes": {},
              "can_reply": true,
              "channel": "Channel::Api",
              "contact_inbox": {
                "id": 5582,
                "contact_id": 299,
                "inbox_id": 1,
                "source_id": "70ffd0b4-e1ca-4382-8f1f-6d6694d1c36f",
                "created_at": "2024-01-26T18:03:06.253Z",
                "updated_at": "2024-01-26T18:03:06.253Z",
                "hmac_verified": false,
                "pubsub_token": "jyR9C4Motc68qAALxReVg7s3"
              },
              "id": 853,
              "inbox_id": 1,
              "messages": [
                {
                  "id": 130590,
                  "content": "dasdasdasd",
                  "account_id": 1,
                  "inbox_id": 1,
                  "conversation_id": 853,
                  "message_type": 1,
                  "created_at": 1706303170,
                  "updated_at": "2024-01-26T21:06:10.882Z",
                  "private": false,
                  "status": "sent",
                  "source_id": null,
                  "content_type": "text",
                  "content_attributes": {
                    "in_reply_to": 130589,
                    "in_reply_to_external_id": null
                  },
                  "sender_type": "User",
                  "sender_id": 40,
                  "external_source_ids": {},
                  "additional_attributes": {},
                  "processed_message_content": "dasdasdasd",
                  "sentiment": {},
                  "conversation": {
                    "assignee_id": null,
                    "unread_count": 0,
                    "last_activity_at": 1706303170,
                    "contact_inbox": {
                      "source_id": "70ffd0b4-e1ca-4382-8f1f-6d6694d1c36f"
                    }
                  },
                  "sender": {
                    "id": 40,
                    "name": "Arthur Ferroni",
                    "available_name": "Arthur Ferroni",
                    "avatar_url": "",
                    "type": "user",
                    "availability_status": "offline",
                    "thumbnail": ""
                  }
                }
              ],
              "labels": [],
              "meta": {
                "sender": {
                  "additional_attributes": {
                    "city": "",
                    "country": "",
                    "source_id": "email:CANwWz-+oXxtU0j4RzLjxQWHLTa4ZsfDT7MLOoN-CG5sYBSRX-w@mail.gmail.com",
                    "description": "",
                    "company_name": "",
                    "country_code": "",
                    "social_profiles": {
                      "line": "",
                      "github": "arthurrferroni",
                      "twitter": "arthurferroni",
                      "website": "approachti.com.br/arthur",
                      "facebook": "arthurferroni",
                      "linkedin": "in/arthurferroni",
                      "telegram": "",
                      "instagram": "arthurferroni"
                    }
                  },
                  "custom_attributes": {},
                  "email": "arthurferroni@gmail.com",
                  "id": 299,
                  "identifier": "553592630001@s.whatsapp.net",
                  "name": "Arthur Ferroni",
                  "phone_number": "+5535992630001",
                  "thumbnail": "https://chat.approachti.com.br/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBOGhiQVE9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--d3725423cab5a0409974a771f3344fbca5ecac80/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdCem9MWm05eWJXRjBTU0lJYW5CbkJqb0dSVlE2RTNKbGMybDZaVjkwYjE5bWFXeHNXd2RwQWZvdyIsImV4cCI6bnVsbCwicHVyIjoidmFyaWF0aW9uIn19--bead05e9f7c86463a05ea21b0fc9cc38cc214fe2/367519969_3494766354107870_7304252424232929019_n.jpg",
                  "type": "contact"
                },
                "assignee": null,
                "team": null,
                "hmac_verified": false
              },
              "status": "open",
              "custom_attributes": {},
              "snoozed_until": null,
              "unread_count": 0,
              "first_reply_created_at": "2024-01-26T19:53:06.461Z",
              "priority": null,
              "waiting_since": 1706303165,
              "agent_last_seen_at": 1706303170,
              "contact_last_seen_at": 1706303082,
              "timestamp": 1706303170,
              "created_at": 1706292186
            },
            "created_at": "2024-01-26T21:06:10.882Z",
            "id": 130590,
            "inbox": {
              "id": 1,
              "name": "WhatsAPP"
            },
            "message_type": "outgoing",
            "private": false,
            "sender": {
              "id": 40,
              "name": "Arthur Ferroni",
              "email": "arthur@approachti.com.br",
              "type": "user"
            },
            "source_id": null,
            "event": "message_created"
          }
        }
      }
    ]
  },
  "connections": {
    "From ChatWoot": {
      "main": [
        [
          {
            "node": "Defaults",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Created Event": {
      "main": [
        [
          {
            "node": "Is Outgoing Message ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Message ?": {
      "main": [
        [
          {
            "node": "If Control Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Conversation Created Event": {
      "main": [
        [
          {
            "node": "Sent by agent ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Only ?": {
      "main": [
        [
          {
            "node": "Quepasa Send Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Quepasa Send Attach",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Outgoing Message ?": {
      "main": [
        [
          {
            "node": "Is Public ?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Is Incoming !",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Public ?": {
      "main": [
        [
          {
            "node": "Is Not From Sincronize Bot?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Is Private !",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Not From Sincronize Bot?": {
      "main": [
        [
          {
            "node": "From Quepasa Control ?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "From Customer !",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Control Message": {
      "main": [
        [
          {
            "node": "Quepasa Chat Control Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Should Prepend Agent Title ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quepasa Chat Control Workflow": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sent by agent ?": {
      "main": [
        [
          {
            "node": "Open Conversation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Normal Exit (GNE)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open Conversation": {
      "main": [
        [
          {
            "node": "Normal Exit (GNE)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Message Update Event",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [],
        [
          {
            "node": "Not Message Created Event !",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Update Event": {
      "main": [
        [
          {
            "node": "If Deleted ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Deleted ?": {
      "main": [
        [
          {
            "node": "Is Outgoing Message ?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Quepasa Send Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "Text Only ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Defaults": {
      "main": [
        [
          {
            "node": "Switch Event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Throw To Profile Update Workflow": {
      "main": [
        [
          {
            "node": "Normal Exit (CUP)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enabled CSAT ?": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Payload With CSAT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Use CSAT ?": {
      "main": [
        [
          {
            "node": "Getting UUID",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Payload Without CSAT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Use CSAT ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Conversation Resolved": {
      "main": [
        [
          {
            "node": "If Not Control & Not Broadcast",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Update Contact Payload": {
      "main": [
        [
          {
            "node": "Throw To Profile Update Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Conversation Status Changed  Event": {
      "main": [
        [
          {
            "node": "Getting ChatId From Custom|Email|Source|Phone",
            "type": "main",
            "index": 0
          },
          {
            "node": "Post Resolved Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Getting UUID": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing3": {
      "main": [
        [
          {
            "node": "Enabled CSAT ?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Skip Evaluation By Contact": {
      "main": [
        [],
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evaluation Message Payload Ready To Quepasa": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Getting ChatId From Custom|Email|Source|Phone": {
      "main": [
        [
          {
            "node": "Set Update Contact Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post Resolved Message": {
      "main": [
        [
          {
            "node": "If Conversation Resolved",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Payload": {
      "main": [
        [
          {
            "node": "Text Message ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Payload With CSAT": {
      "main": [
        [
          {
            "node": "Evaluation Message Payload Ready To Quepasa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Payload Without CSAT": {
      "main": [
        [
          {
            "node": "Evaluation Message Payload Ready To Quepasa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Account Found ?": {
      "main": [
        [
          {
            "node": "Skip Evaluate By Conversation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Account Id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Set Account in Query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Account in Query": {
      "main": [
        [
          {
            "node": "Merge Account Id",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge Account Id": {
      "main": [
        [
          {
            "node": "Skip Evaluate By Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "From Quepasa Control ?": {
      "main": [
        [
          {
            "node": "Throw To Quepasa Inbox Control Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Outgoing Message ?1": {
      "main": [
        [
          {
            "node": "Is Public ?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Event": {
      "main": [
        [
          {
            "node": "Message Created Event",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Conversation Status Changed  Event",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Conversation Created Event",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Not Control & Not Broadcast": {
      "main": [
        [
          {
            "node": "Account Found ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Public ?1": {
      "main": [
        [
          {
            "node": "Quepasa Revoke",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Prepend Agent Title ?": {
      "main": [
        [
          {
            "node": "Update Content With Agent Ttitle",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Follow after prepend",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Content With Agent Ttitle": {
      "main": [
        [
          {
            "node": "Follow after prepend",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Follow after prepend": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Skip Evaluate By Conversation": {
      "main": [
        [],
        [
          {
            "node": "Skip Evaluation By Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EstÃ¡ Conectado?1": {
      "main": [
        [
          {
            "node": "Envia DesconexÃ£o1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Info1": {
      "main": [
        [
          {
            "node": "EstÃ¡ Conectado?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "enviado com sucesso?1": {
      "main": [
        [
          {
            "node": "Normal Exit (RAS)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Info1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quepasa Send Text": {
      "main": [
        [
          {
            "node": "enviado com sucesso?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quepasa Send Attach": {
      "main": [
        [
          {
            "node": "enviado com sucesso?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Envia DesconexÃ£o1": {
      "main": [
        [
          {
            "node": "Normal Exit (RAS)1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 50,
    "executionOrder": "v0",
    "errorWorkflow": "o0tUlp8GdNI2vcwB"
  },
  "versionId": "8741393e-325b-4b10-b646-467ea6496e33",
  "id": "1008",
  "meta": {
    "instanceId": "b0f69e3c6d1f5668f6e8b6f67bd5d337293bd6464be3f9adc6773d4609da5a0a"
  },
  "tags": [
    {
      "createdAt": "2024-01-05T16:19:02.727Z",
      "updatedAt": "2024-01-05T16:19:02.727Z",
      "id": "D367fSUcIbnwZDaY",
      "name": "quepasa"
    },
    {
      "createdAt": "2023-11-16T17:18:46.720Z",
      "updatedAt": "2023-11-16T17:18:46.720Z",
      "id": "Hvs9dsaHRMOSIDZN",
      "name": "chatwoot"
    },
    {
      "createdAt": "2023-11-16T17:18:46.718Z",
      "updatedAt": "2023-11-16T17:18:46.718Z",
      "id": "j7oSLoK8BbO8De4b",
      "name": "github.com/nocodeleaks"
    }
  ]
}