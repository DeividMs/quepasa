{
  "name": "QuepasaToChatwoot",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.conversation.status}}",
              "operation": "notEqual",
              "value2": "open"
            }
          ]
        }
      },
      "name": "Open ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5500,
        -880
      ],
      "id": "87f3c402-bf45-4fc5-9297-a7be7b83b945"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json[\"extra\"][\"cwhost\"]}}/api/v1/accounts/{{$json[\"extra\"][\"account\"]}}/conversations",
        "allowUnauthorizedCerts": true,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "status",
              "value": "open"
            },
            {
              "name": "inbox_id",
              "value": "={{$json[\"extra\"][\"inbox\"]}}"
            },
            {
              "name": "contact_id",
              "value": "={{$json.chat.chatwoot.id}}"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{$json[\"extra\"][\"atoken\"]}}"
            }
          ]
        }
      },
      "name": "Create a Conversation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        4800,
        -1100
      ],
      "id": "e4adb3ce-7b17-4a9c-b29c-19e1e83d12b0",
      "notes": "Important to use \"source_id\" to respond messages"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "conversation.id",
              "value": "={{$json.id}}"
            },
            {
              "name": "conversation.status",
              "value": "={{$json.status}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        5040,
        -1100
      ],
      "id": "3f06feba-5a2b-4f5b-b859-2b762a7c3b89"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json[\"extra\"][\"cwhost\"]}}/api/v1/accounts/{{$json[\"extra\"][\"account\"]}}/conversations/{{$json[\"conversation\"][\"id\"]}}/toggle_status",
        "allowUnauthorizedCerts": true,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "status",
              "value": "open"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{$json[\"extra\"][\"atoken\"]}}"
            }
          ]
        }
      },
      "name": "Open a Conversation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        5760,
        -1100
      ],
      "id": "19365cc5-f109-4385-8b98-18bf0f2bf9ba"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json[\"chat\"][\"id\"].contains(\"@broadcast\") ?? true}}",
              "operation": "notEqual",
              "value2": true
            }
          ]
        }
      },
      "name": "Not Broadcast ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        560,
        -900
      ],
      "id": "56337da1-6d13-4993-ae9d-8e659606da30"
    },
    {
      "parameters": {
        "mode": "multiplex"
      },
      "name": "Merge3",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 1,
      "position": [
        2700,
        -560
      ],
      "id": "bf1bbab9-fa50-4b8d-bd9f-0c2eefb466ec"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "to-chatwoot",
        "options": {}
      },
      "id": "1d0221b6-8913-491b-b043-b6c74c2f5e71",
      "name": "Webhook Chatwoot",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        300,
        -900
      ],
      "webhookId": "f0d0e1da-e8cf-4956-8715-dccf5fe3c892"
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {}
      },
      "id": "e4be5a75-5809-4dc1-935d-19d0c6d0f023",
      "name": "Broadcast Message",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1020,
        -700
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.conversation?.id}}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "name": "Should Create a New Conversation Thread ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        4260,
        -900
      ],
      "alwaysOutputData": false,
      "id": "de6b48c0-0783-4daf-a9e4-bb96eb08f991"
    },
    {
      "parameters": {
        "content": "## Follow to Chatwoot",
        "height": 262.50469912086913,
        "width": 251.48817318430855
      },
      "id": "c15a55c6-7f19-477e-8a2a-1fb6dc53b5d9",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        8640,
        -1060
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.fromme == true}}"
            }
          ]
        }
      },
      "id": "34959cd1-a040-4f15-b816-ea8c508d9ac0",
      "name": "Should Send Greetings ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        4820,
        -1440
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_CHATWOOTTOQUEPASAGREETINGS'] }}"
      },
      "id": "1b2ff12e-e664-49cf-a82f-3d008abb98e9",
      "name": "Throw To Greetings Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        5280,
        -1440
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "c6a820b5-6b1e-4b9e-aa2e-11ef48ffd4f3",
      "name": "Wait For Create a Conversation",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        5060,
        -1440
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_QUEPASACHATCONTROL'] }}"
      },
      "id": "a63e0a0a-0fb9-4e18-995c-84749d3d14b1",
      "name": "Throw To Quepasa Chat Control Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        9540,
        -1300
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "content": "## Getting and Filtering Conversations\n",
        "height": 616.1278921539156,
        "width": 2110.852343765206
      },
      "id": "6501a7c7-acf2-4472-a8a4-b04c243bcb79",
      "name": "Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1820,
        -700
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "cwhost",
              "value": "={{$json[\"extra\"][\"cwhost\"]}}"
            },
            {
              "name": "account",
              "value": "={{$json[\"extra\"][\"account\"]}}"
            },
            {
              "name": "inbox",
              "value": "={{$json[\"extra\"][\"inbox\"]}}"
            },
            {
              "name": "utoken",
              "value": "={{$json[\"extra\"][\"utoken\"]}}"
            },
            {
              "name": "chatid",
              "value": "={{$json.chat.id}}"
            },
            {
              "name": "contactid",
              "value": "={{$json.chat.chatwoot.id}}"
            }
          ]
        },
        "options": {}
      },
      "id": "ec1bd913-3174-41f0-be6a-ceb16d6116ad",
      "name": "Set Filter Conversation Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1920,
        -580
      ]
    },
    {
      "parameters": {},
      "id": "06de4c49-99db-4754-a94c-f99a03959823",
      "name": "new payload",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1460,
        -920
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "a8e44c9a-46e8-42da-bd28-2eacb68a601d",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        4060,
        -900
      ]
    },
    {
      "parameters": {},
      "id": "7cc7696b-96f4-4828-b3b8-d8c97e2a892a",
      "name": "NoOp - Opening Conversation1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4560,
        -1100
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "d5d0387c-154d-4142-81c8-f9930b76ecec",
      "name": "Wait For Create a Conversation1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        5300,
        -940
      ]
    },
    {
      "parameters": {},
      "id": "24d93303-5f65-4729-9868-889ac0e7f48a",
      "name": "NoOp - Opening Conversation",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        6340,
        -860
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "0515f104-fdf0-4eed-a562-6ca16f271ec8",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        6100,
        -920
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "conversation.status",
              "value": "={{$json.payload.current_status}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Updated Conversation Status",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        5940,
        -1100
      ],
      "id": "7983b767-7962-474e-9c7e-f4d2dd2f73ef"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content_type",
              "value": "text"
            },
            {
              "name": "payload.event",
              "value": "={{ $('Webhook Chatwoot').item.json.body.type }}"
            },
            {
              "name": "payload.edited",
              "value": "={{ $('Webhook Chatwoot').item.json.body.edited || false}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Payload Constants",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        8980,
        -980
      ],
      "id": "10cf70a1-5794-44ca-b3f2-69f539b8474e"
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_POSTTOCHATWOOT'] }}"
      },
      "id": "d67bbb2a-fc12-48c7-a61d-4bdd78d6f9db",
      "name": "Execute Workflow Post To Chatwoot",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        9540,
        -960
      ],
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "content": "## Call Request ?",
        "height": 354.0653279804751,
        "width": 237.27247076935066
      },
      "id": "b3e3c425-1565-45ed-804d-c28bfd88cb71",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        6560,
        -980
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.type}}",
              "operation": "equal",
              "value2": 8
            }
          ]
        }
      },
      "id": "88adc2c0-3ff0-4b8c-bb33-2298decdccb3",
      "name": "If Call Request ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6620,
        -860
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "text",
              "value": "## (Sistema) O Usuário requisitou uma chamada de voz !\n----------------------------------------------------"
            }
          ],
          "boolean": [
            {
              "name": "payload.private",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "38ced44d-cf41-4559-b027-b23c937bbbef",
      "name": "Set Text Content For Call Request",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        6900,
        -1000
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_POSTTOWEBCALLBACK'] }}"
      },
      "id": "bf7a29db-9097-4bb0-afb5-76b849036c21",
      "name": "Throw To WebCallBack Telephony Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        7180,
        -1200
      ],
      "executeOnce": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "values": {
          "number": [
            {
              "name": "attempts",
              "value": "={{ ($json.attempts ?? 0) + 1 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b426c411-6044-4aa9-8b21-71926549a3a5",
      "name": "Set Increment For Conversations Attempts",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        3220,
        -400
      ]
    },
    {
      "parameters": {
        "amount": "={{ (Math.random() * 5) + 1 }}",
        "unit": "seconds"
      },
      "id": "77601961-eda9-4494-89f6-9302a2a7385a",
      "name": "Wait a while (5s) For Conversation",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        3580,
        -320
      ],
      "webhookId": "13d982e4-e253-4616-9e0a-3da472be5e56"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "conversation.id",
              "value": "={{$json.payload?.id}}"
            },
            {
              "name": "conversation.status",
              "value": "={{$json.payload?.status}}"
            }
          ]
        },
        "options": {}
      },
      "id": "a8526070-af61-43df-a1ac-3f32c5c60670",
      "name": "Set Conversation Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        3740,
        -580
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "={{$json.text}}"
            },
            {
              "name": "payload.message_type",
              "value": "={{$json.fromme?\"outgoing\":\"incoming\"}}"
            },
            {
              "name": "payload.source_id",
              "value": "={{$json.id}}"
            },
            {
              "name": "payload.content_attributes.items.quepasa.msgid",
              "value": "={{ $json.id }}"
            },
            {
              "name": "payload.content_attributes.in_reply_to",
              "value": "={{ $json.inreply ? +$json.inreply : undefined }}"
            },
            {
              "name": "payload.attachment",
              "value": "={{$json.attachment}}"
            },
            {
              "name": "chatid",
              "value": "={{$json.chat.id}}"
            },
            {
              "name": "conversation",
              "value": "={{$json.conversation}}"
            },
            {
              "name": "extra",
              "value": "={{$json.extra}}"
            },
            {
              "name": "hex",
              "value": "={{$json.chat.chatwoot.source_id}}"
            },
            {
              "name": "synopsis",
              "value": "={{$json.synopsis}}"
            },
            {
              "name": "participant.title",
              "value": "={{$json.participant?.title}}"
            },
            {
              "name": "payload.external_created_at",
              "value": "={{ new Date($json.timestamp).getTime() / 1000 }}"
            }
          ],
          "boolean": [
            {
              "name": "payload.private",
              "value": "={{ $json.payload?.private ?? false }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Chatwoot Message Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        8720,
        -980
      ],
      "id": "f60e14eb-e009-4412-99ec-194f81fb8744"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT \n display_id, \n status\nFROM conversations \nWHERE \n\taccount_id = '{{ $json.account }}' \n\tAND inbox_id = '{{ $json.inbox }}'\n\tAND contact_id = '{{ $json.contactid }}'\nORDER BY id DESC\nLIMIT 1",
        "additionalFields": {}
      },
      "id": "e60ae04a-a549-40be-9ecc-8f0102e5ea80",
      "name": "Get Last Conversation",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        2340,
        -480
      ],
      "retryOnFail": false,
      "waitBetweenTries": 2000,
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "vSgNoxPsTNRz4Pxu",
          "name": "Postgres account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "jsCode": "const validStatus = [\"open\", \"resolved\", \"pending\", \"snoozed\"];\n\nreturn [{\n  payload: {\n    id: $input.first().json.display_id,\n    status: validStatus[$input.first().json.status]\n  }\n}];"
      },
      "id": "7cccdbff-ed49-45c5-acc7-a604662ec0ce",
      "name": "Rename Status Enum",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        2520,
        -480
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $env[\"C8Q_SINGLETHREAD\"] ?? false }}",
              "value2": true
            }
          ]
        }
      },
      "id": "ba6c32c5-48ac-4de6-b387-1afb0b274251",
      "name": "If Single Thread ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2860,
        -560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.attempts ?? 0 }}",
              "operation": "larger",
              "value2": 2
            }
          ]
        }
      },
      "id": "7832f7b8-f1d1-4a10-9838-a9f166eba823",
      "name": "Max Attempts Reached ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3400,
        -400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.payload?.status }}",
              "operation": "notEqual",
              "value2": "resolved"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "b1851e3f-ccbc-4b39-91ed-2561fd404874",
      "name": "If Not Resolved Conversation Found ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3040,
        -480
      ]
    },
    {
      "parameters": {},
      "id": "8a4c2598-cec9-4ee8-98f0-e4b6a9156628",
      "name": "#region retries for conversation",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2160,
        -580
      ]
    },
    {
      "parameters": {},
      "id": "a73bf3fe-d7e4-44cb-83ab-7cf6e27d7f44",
      "name": "first found",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3220,
        -580
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "options": {}
      },
      "id": "66b6d42f-aef0-473b-9f78-cd28ba06ccf0",
      "name": "CleanUp Invalid Status",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        3580,
        -480
      ]
    },
    {
      "parameters": {
        "content": "## (1.0.2) Updates\n* chat command, instead invite command\n\n## Recommendations \n* Remember set timeout to 30 seconds",
        "height": 175.9061641534987,
        "width": 398.97654103837476
      },
      "id": "c3701431-3364-4941-8ae7-37bf72d68773",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        560,
        -1320
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_GETCHATWOOTCONTACTS'] }}"
      },
      "id": "670234ea-2085-41e9-8c4f-e8d81b11d7c6",
      "name": "Throw Get Chatwoot Contacts Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        1260,
        -920
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.payload.content ?? '' }}",
              "operation": "startsWith",
              "value2": "/invite"
            },
            {
              "value1": "={{ $json.payload.content ?? '' }}",
              "operation": "startsWith",
              "value2": "//"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "09cb9cdf-d28c-405b-b570-ca2dc31be04b",
      "name": "If Chat Command",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        9220,
        -980
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.inreply }}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "c46ce917-546e-461a-a568-efb1606cc2f2",
      "name": "If Not In Reply",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6880,
        -700
      ]
    },
    {
      "parameters": {},
      "id": "3fa2b9ac-856f-475c-b38a-bc24bfbde4e8",
      "name": "Follow to Chatwoot",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        8180,
        -980
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=\nSELECT id AS inreply_internal_id\nFROM messages \nWHERE source_id = '{{ $json.inreply }}'\nLIMIT 1",
        "options": {}
      },
      "id": "e8023cf3-86a8-4c82-9ee1-927c1f58af42",
      "name": "Get In Reply Reference Id",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        7280,
        -460
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "vSgNoxPsTNRz4Pxu",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "39b1e829-42ff-4a3f-bc51-37b922d9b4c7",
      "name": "Merging Found Id",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        7520,
        -660
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "inreply",
              "value": "={{ $json.inreply_internal_id }}"
            },
            {
              "name": "synopsis",
              "value": "={{ undefined }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9ade9836-79a7-4fd2-8a23-35ff7f738935",
      "name": "Set1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        7900,
        -640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.inreply }}",
              "operation": "contains",
              "value2": "-"
            }
          ]
        }
      },
      "id": "f67dcefd-8081-4941-9644-28f25ec4ca98",
      "name": "If Has Hiffen",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7080,
        -580
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "inreply_internal_id",
              "value": "={{ $json.inreply.split(/-/).pop() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "bb940495-da0f-4149-9140-107e7fb8e486",
      "name": "Set Internal Id",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        7280,
        -600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.inreply_internal_id }}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "dbe7ea84-dc6a-4487-8d7d-3bfd3e87d7ee",
      "name": "If Not Found",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7700,
        -660
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_QUEPASACHATCONTROL'] }}"
      },
      "id": "746f3267-aba1-4040-8292-d97fe9498fd2",
      "name": "Throw To Quepasa Chat Control Workflow1",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        1080,
        -1100
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.body.chat.id }}",
              "value2": "system"
            }
          ]
        }
      },
      "id": "cd25dc10-0044-4dcf-b33c-1bfe4ce1c791",
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        880,
        -920
      ]
    }
  ],
  "pinData": {
    "Webhook Chatwoot": [
      {
        "json": {
          "headers": {
            "host": "127.0.0.1:5678",
            "user-agent": "Quepasa",
            "content-length": "465",
            "content-type": "application/json",
            "x-quepasa-wid": "553597567586:41@s.whatsapp.net",
            "accept-encoding": "gzip"
          },
          "params": {},
          "query": {},
          "body": {
            "id": "3EB004DCE5AD409C1B1DF0",
            "timestamp": "2024-01-27T10:21:36-03:00",
            "type": 9,
            "chat": {
              "id": "system",
              "title": "Internal System Message"
            },
            "text": "401: logged out from another device",
            "fromme": false,
            "frominternal": false,
            "extra": {
              "account": 1,
              "atoken": "e7d95901c1c32094a01d838",
              "cwhost": "http://127.0.0.1:3000",
              "identifier": "WRzeHuuuCVbTA99kLWzUqms4",
              "inbox": 1,
              "qphost": "http://127.0.0.1:31000",
              "qptoken": "WRzeHuuuCVbTA99kLWzUqms4",
              "utoken": "sAgLXqoCrq7aB34JdQTZbm4W"
            }
          }
        }
      }
    ]
  },
  "connections": {
    "Open ?": {
      "main": [
        [
          {
            "node": "Open a Conversation",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "NoOp - Opening Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a Conversation": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait For Create a Conversation",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "Wait For Create a Conversation1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open a Conversation": {
      "main": [
        [
          {
            "node": "Set Updated Conversation Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Not Broadcast ?": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Broadcast Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook Chatwoot": {
      "main": [
        [
          {
            "node": "Not Broadcast ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Send Greetings ?": {
      "main": [
        [
          {
            "node": "Wait For Create a Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait For Create a Conversation": {
      "main": [
        [
          {
            "node": "Throw To Greetings Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Filter Conversation Parameters": {
      "main": [
        [
          {
            "node": "#region retries for conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new payload": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          },
          {
            "node": "Set Filter Conversation Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Should Create a New Conversation Thread ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp - Opening Conversation1": {
      "main": [
        [
          {
            "node": "Create a Conversation",
            "type": "main",
            "index": 0
          },
          {
            "node": "Should Send Greetings ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait For Create a Conversation1": {
      "main": [
        [
          {
            "node": "Open ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp - Opening Conversation": {
      "main": [
        [
          {
            "node": "If Call Request ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "NoOp - Opening Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Updated Conversation Status": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Payload Constants": {
      "main": [
        [
          {
            "node": "If Chat Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Call Request ?": {
      "main": [
        [
          {
            "node": "Set Text Content For Call Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Not In Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Text Content For Call Request": {
      "main": [
        [
          {
            "node": "Throw To WebCallBack Telephony Workflow",
            "type": "main",
            "index": 0
          },
          {
            "node": "Follow to Chatwoot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Increment For Conversations Attempts": {
      "main": [
        [
          {
            "node": "Max Attempts Reached ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "If Single Thread ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chatwoot Message Payload": {
      "main": [
        [
          {
            "node": "Payload Constants",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Last Conversation": {
      "main": [
        [
          {
            "node": "Rename Status Enum",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rename Status Enum": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Set Conversation Payload": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If Single Thread ?": {
      "main": [
        [
          {
            "node": "first found",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Not Resolved Conversation Found ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Create a New Conversation Thread ?": {
      "main": [
        [
          {
            "node": "NoOp - Opening Conversation1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait For Create a Conversation1",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Open ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait a while (5s) For Conversation": {
      "main": [
        [
          {
            "node": "#region retries for conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Max Attempts Reached ?": {
      "main": [
        [
          {
            "node": "CleanUp Invalid Status",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait a while (5s) For Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Not Resolved Conversation Found ?": {
      "main": [
        [
          {
            "node": "first found",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Increment For Conversations Attempts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "#region retries for conversation": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Last Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "first found": {
      "main": [
        [
          {
            "node": "Set Conversation Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CleanUp Invalid Status": {
      "main": [
        [
          {
            "node": "Set Conversation Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Throw Get Chatwoot Contacts Workflow": {
      "main": [
        [
          {
            "node": "new payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Chat Command": {
      "main": [
        [
          {
            "node": "Throw To Quepasa Chat Control Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow Post To Chatwoot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Not In Reply": {
      "main": [
        [
          {
            "node": "Follow to Chatwoot",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Has Hiffen",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merging Found Id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Follow to Chatwoot": {
      "main": [
        [
          {
            "node": "Chatwoot Message Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get In Reply Reference Id": {
      "main": [
        [
          {
            "node": "Merging Found Id",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merging Found Id": {
      "main": [
        [
          {
            "node": "If Not Found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Has Hiffen": {
      "main": [
        [
          {
            "node": "Set Internal Id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get In Reply Reference Id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Internal Id": {
      "main": [
        [
          {
            "node": "Merging Found Id",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If Not Found": {
      "main": [
        [
          {
            "node": "Follow to Chatwoot",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set1": {
      "main": [
        [
          {
            "node": "Follow to Chatwoot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "Throw To Quepasa Chat Control Workflow1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Throw Get Chatwoot Contacts Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 30
  },
  "versionId": "e516b544-cc02-488e-a37f-323456643c00",
  "id": "1009",
  "meta": {
    "instanceId": "b0f69e3c6d1f5668f6e8b6f67bd5d337293bd6464be3f9adc6773d4609da5a0a"
  },
  "tags": [
    {
      "createdAt": "2023-11-16T17:18:46.718Z",
      "updatedAt": "2023-11-16T17:18:46.718Z",
      "id": "j7oSLoK8BbO8De4b",
      "name": "github.com/nocodeleaks"
    },
    {
      "createdAt": "2023-11-16T17:18:46.720Z",
      "updatedAt": "2023-11-16T17:18:46.720Z",
      "id": "Hvs9dsaHRMOSIDZN",
      "name": "chatwoot"
    }
  ]
}