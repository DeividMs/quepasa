{
  "name": "QuepasaToChatwoot",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.participant}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "name": "Has Participant ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1260,
        660
      ],
      "id": "f86278df-3dd0-4a64-a90b-ac31e9f54113"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "participant.chatwoot",
              "value": "={{$json}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Participant Contact",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -460,
        480
      ],
      "id": "561f06e3-dd70-4496-9132-2784ff609a4a"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.conversation.status}}",
              "operation": "notEqual",
              "value2": "open"
            }
          ]
        }
      },
      "name": "Open ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        4180,
        1260
      ],
      "id": "8e4d0815-6c88-4248-8bea-5a8ddcf2605b"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json[\"extra\"][\"cwhost\"]}}/api/v1/accounts/{{$json[\"extra\"][\"account\"]}}/conversations",
        "allowUnauthorizedCerts": true,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "status",
              "value": "open"
            },
            {
              "name": "inbox_id",
              "value": "={{$json[\"extra\"][\"inbox\"]}}"
            },
            {
              "name": "contact_id",
              "value": "={{$json.chat.chatwoot.id}}"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{$json[\"extra\"][\"atoken\"]}}"
            }
          ]
        }
      },
      "name": "Create a Conversation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        3480,
        1040
      ],
      "id": "80dea311-6c81-407a-a747-38a63f854b5c",
      "notes": "Important to use \"source_id\" to respond messages"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "conversation.id",
              "value": "={{$json.id}}"
            },
            {
              "name": "conversation.status",
              "value": "={{$json.status}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        3720,
        1040
      ],
      "id": "c135a2d9-daa5-422d-9e7b-a5c84ed05a16"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json[\"extra\"][\"cwhost\"]}}/api/v1/accounts/{{$json[\"extra\"][\"account\"]}}/conversations/{{$json[\"conversation\"][\"id\"]}}/toggle_status",
        "allowUnauthorizedCerts": true,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "status",
              "value": "open"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{$json[\"extra\"][\"atoken\"]}}"
            }
          ]
        }
      },
      "name": "Open a Conversation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        4440,
        1040
      ],
      "id": "62da461b-0a2c-42fa-a10a-b53511b66af6"
    },
    {
      "parameters": {
        "url": "={{$json.cwhost}}/api/v1/accounts/{{$json.account}}/contacts/{{$json.contactid}}/conversations",
        "allowUnauthorizedCerts": true,
        "options": {},
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{$json.utoken}}"
            }
          ]
        },
        "queryParametersUi": {
          "parameter": [
            {}
          ]
        }
      },
      "name": "Get Conversation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        1500,
        1540
      ],
      "id": "92e1b405-d794-49d6-ba84-e2375d7e4289",
      "retryOnFail": false,
      "executeOnce": true,
      "notes": "Missing filter by:\nContact Id\nInbox Id\nStatus = open | pending"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json[\"chat\"][\"id\"].contains(\"@broadcast\") ?? true}}",
              "operation": "notEqual",
              "value2": true
            }
          ]
        }
      },
      "name": "Not Broadcast ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -6160,
        1260
      ],
      "id": "b51a97d1-1a62-4e5c-998c-924d4a7a41a6"
    },
    {
      "parameters": {
        "mode": "multiplex"
      },
      "name": "Merge3",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 1,
      "position": [
        1680,
        1440
      ],
      "id": "5becfda2-2cae-4dbe-beef-0df2cd7677b0"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "to-chatwoot",
        "options": {}
      },
      "id": "8721f62a-2444-4b61-b2d4-36e0b39e9885",
      "name": "Webhook Chatwoot",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -6380,
        1260
      ],
      "webhookId": "f0d0e1da-e8cf-4956-8715-dccf5fe3c892"
    },
    {
      "parameters": {
        "baseUrl": "={{$json[\"extra\"][\"cwhost\"]}}",
        "sourceId": "={{$json[\"participant\"][\"hex\"]}}",
        "name": "={{$json[\"participant\"][\"title\"]}}",
        "inboxId": "={{$json[\"extra\"][\"inbox\"]}}",
        "phoneNumber": "={{$json[\"participant\"][\"phone\"]}}",
        "operation": "publicContactCreate",
        "inboxIdentifier": "={{$json[\"extra\"][\"identifier\"]}}"
      },
      "id": "6ad8c782-ce79-4ebd-8875-b3e94e3bced2",
      "name": "GetAndCreate Participant",
      "type": "n8n-nodes-chatwoot.chatwoot",
      "typeVersion": 1,
      "position": [
        -940,
        500
      ],
      "executeOnce": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {}
      },
      "id": "878becd2-358e-4c1c-bbf5-5ca974635e89",
      "name": "Broadcast Message",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -5900,
        1680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.conversation?.id}}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "name": "Should Create a New Conversation Thread ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2980,
        1240
      ],
      "alwaysOutputData": false,
      "id": "2794104b-c14f-438a-92ad-bea477318146"
    },
    {
      "parameters": {
        "content": "## Follow to Chatwoot",
        "height": 262.50469912086913,
        "width": 251.48817318430855
      },
      "id": "77120b9e-aa0b-49a0-a127-9a3fe73d2554",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5780,
        1220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.payload.content ?? '' }}",
              "operation": "startsWith",
              "value2": "/invite"
            }
          ]
        }
      },
      "id": "f3dc35ce-ab8b-4d41-a6e7-f19e1a71e8fe",
      "name": "If Invite Command",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6360,
        1300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.fromme == true}}"
            }
          ]
        }
      },
      "id": "403130e7-55be-42b8-ab2b-d88cb415ba61",
      "name": "Should Send Greetings ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3500,
        700
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_CHATWOOTTOQUEPASAGREETINGS'] }}"
      },
      "id": "6518c671-0c37-4281-a4c9-8639142297e4",
      "name": "Throw To Greetings Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        3960,
        700
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "cb16741a-737b-40a9-a554-5d6d821432c1",
      "name": "Wait For Create a Conversation",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        3740,
        700
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_QUEPASACHATCONTROL'] }}"
      },
      "id": "838298bd-dd0f-4b8d-87a0-82874d929cc1",
      "name": "Throw To Quepasa Chat Control Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        6680,
        980
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "content": "## Getting and Filtering Conversations\n",
        "height": 522.3007669591103,
        "width": 1625.2969708820842
      },
      "id": "c2291ee0-f1aa-492b-858a-03a49317a03b",
      "name": "Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        960,
        1320
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "cwhost",
              "value": "={{$json[\"extra\"][\"cwhost\"]}}"
            },
            {
              "name": "account",
              "value": "={{$json[\"extra\"][\"account\"]}}"
            },
            {
              "name": "inbox",
              "value": "={{$json[\"extra\"][\"inbox\"]}}"
            },
            {
              "name": "utoken",
              "value": "={{$json[\"extra\"][\"utoken\"]}}"
            },
            {
              "name": "chatid",
              "value": "={{$json.chat.id}}"
            },
            {
              "name": "contactid",
              "value": "={{$json.chat.chatwoot.id}}"
            }
          ]
        },
        "options": {}
      },
      "id": "1e443a73-f0c0-42c4-968b-0c1191686c73",
      "name": "Set Filter Conversation Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1040,
        1420
      ]
    },
    {
      "parameters": {
        "jsCode": "const validStatus = [\"pending\", \"snoozed\", \"open\"];\nfunction Filters(conversation, inbox){\n  if(!conversation) return false;\n  if(inbox){\n    if(conversation.inbox_id != inbox)\n      return false;\n  }\n  return validStatus.includes(conversation.status);\n}\n\n\nfor (const item of $input.all()){\n  if(item.json.payload){\n\n      // applying filters\n      const conversations = item.json.payload.filter((e) => Filters(e, item.json.inbox));      \n      item.json.payload = conversations?.shift();\n  } \n}\n\nreturn $input.all();"
      },
      "id": "466fa6c1-fef3-496c-b091-ba1428feaa9d",
      "name": "Filter Open|Pend|Snooze",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1880,
        1440
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "2bdd367e-4db4-4fe2-84eb-9ed560a562be",
      "name": "Follow To Chat Contact Create",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        -4400,
        1500
      ],
      "notesInFlow": true,
      "notes": "not need to be Multplex, only 1 first. But its bugged !!!"
    },
    {
      "parameters": {
        "baseUrl": "={{$json[\"extra\"][\"cwhost\"]}}",
        "accessToken": "={{$json[\"extra\"][\"utoken\"]}}",
        "resource": "contact",
        "accountId": "={{$json[\"extra\"][\"account\"]}}",
        "sourceId": "={{$json[\"chat\"][\"hex\"]}}",
        "operation": "contactCreate",
        "contactIdentifier": "={{$json[\"chat\"][\"id\"]}}",
        "name": "={{$json[\"chat\"][\"title\"]}}"
      },
      "id": "e229847b-be8d-4f7f-9fef-dd48e805af34",
      "name": "Create Chat Contact",
      "type": "n8n-nodes-chatwoot.chatwoot",
      "typeVersion": 1,
      "position": [
        -4000,
        1680
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "content": "## Group Participant Contact\n",
        "height": 519.0878188679243,
        "width": 1758.1722428032342
      },
      "id": "df29c2c1-e6f4-4a1a-9ffb-81d13d054253",
      "name": "Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1780,
        400
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "options": {}
      },
      "name": "Clearing Participant",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -460,
        680
      ],
      "id": "a0ae19b2-6c14-45ed-9bb1-8f57f84f0fb9"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{$json.extra}}"
            },
            {
              "name": "chat",
              "value": "={{$json.chat}}"
            },
            {
              "name": "participant",
              "value": "={{$json.participant}}"
            }
          ]
        },
        "options": {}
      },
      "id": "c71e0ffb-c6d5-4e53-9b70-b19c1b76a107",
      "name": "Clearing Payload For Contacts",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -5600,
        1300
      ]
    },
    {
      "parameters": {
        "jsCode": "function a2hex(str) {\n  var arr = [];\n  for (var i = 0, l = str.length; i < l; i ++) {\n    var hex = Number(str.charCodeAt(i)).toString(16);\n    arr.push(hex);\n  }\n  return arr.join('');\n}\n\nfor (const item of $input.all()) {\n  let body = item.json;\n  if(body){\n    \n    // Covering participant id\n    if(body.participant){\n\n      if(!body.participant.id || body.participant.id.length == 0)\n      {\n        delete body.participant;\n      } \n      else {\n        body.participant.phone = \"+\" + body.participant.id.split('@').shift();\n        body.participant.hex = a2hex(body.participant.id);\n      }\n    }\n\n    // Covering chat id\n    if(body.chat.id){\n      if(!body.chat.id.endsWith('@g.us')){\n        body.chat.phone = \"+\" + body.chat.id.split('@').shift();\n      } else {\n        // adding contact suffix\n        if(body.chat.title){\n          if(!body.chat.title.endsWith('(GROUP)')) {\n            body.chat.title = body.chat.title + ' (GROUP)'\n          }\n        } else {\n          body.chat.title = 'UNKNOWN (GROUP)'\n        }\n      }\n      body.chat.hex = a2hex(body.chat.id);\n    }\n  }\n}\nreturn $input.all();"
      },
      "id": "acd623a7-dd6e-4dcd-ab54-fd37a9619c5d",
      "name": "Cover Ids & Set Phone",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -5380,
        1300
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{$json.extra}}"
            },
            {
              "name": "participant",
              "value": "={{$json.participant}}"
            }
          ]
        },
        "options": {}
      },
      "id": "f6748ea0-6a04-4c91-a724-9097a29c6e67",
      "name": "Set Participant Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -1460,
        660
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{$json.body.extra}}"
            },
            {
              "name": "chat",
              "value": "={{$json.body.chat}}"
            },
            {
              "name": "participant",
              "value": "={{$json.body.participant}}"
            },
            {
              "name": "id",
              "value": "={{$json.body.id}}"
            },
            {
              "name": "timestamp",
              "value": "={{$json.body.timestamp}}"
            },
            {
              "name": "text",
              "value": "={{$json.body.text}}"
            },
            {
              "name": "inreply",
              "value": "={{$json.body.inreply}}"
            },
            {
              "name": "attachment",
              "value": "={{$json.body.attachment}}"
            }
          ],
          "number": [
            {
              "name": "type",
              "value": "={{$json.body.type}}"
            }
          ],
          "boolean": [
            {
              "name": "fromme",
              "value": "={{$json.body.fromme}}"
            }
          ]
        },
        "options": {}
      },
      "id": "909ce94f-9733-4cf5-873e-5fd0c40f8f92",
      "name": "Clearing Payload For Workflow",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -5840,
        1160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.error}}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "0c54cf00-f39e-45e1-9441-bc4dd82e5195",
      "name": "If Get Participant Sucess ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -740,
        500
      ]
    },
    {
      "parameters": {},
      "id": "dc0d1ce3-8878-4f3e-8cce-8c85a1c67a5a",
      "name": "Deliver Participant Contact Payload",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        0,
        580
      ]
    },
    {
      "parameters": {
        "errorMessage": "chat not processed "
      },
      "id": "1eeb6b96-f785-422d-af03-fc5907ad7c30",
      "name": "Stop And Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -2120,
        1360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload?.id}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "908d3178-82f4-4a32-9b89-ee74c1b95350",
      "name": "If Chat Contact Exists",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -4200,
        1500
      ]
    },
    {
      "parameters": {
        "content": "## Chat Contact\n",
        "height": 745.1581608776635,
        "width": 2436.7449011708095
      },
      "id": "ff65276b-122e-45b4-928a-74b41163852a",
      "name": "Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5100,
        1300
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "abe426d3-1d44-4d20-b19c-de581471e5e4",
      "name": "Parameters + Contacts1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        -2500,
        1200
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.participant ?? undefined}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "d8d81eca-4169-4a55-a35d-5aa2929136c4",
      "name": "If Group ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -2020,
        1180
      ],
      "notesInFlow": true,
      "notes": "Always false for now"
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "c0ea528e-8cc0-402b-ab4e-e27f89200b97",
      "name": "Parameters + Contacts",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        480,
        1160
      ],
      "executeOnce": false
    },
    {
      "parameters": {},
      "id": "f31d961c-310d-47ea-8bee-8a7b2387f69f",
      "name": "new payload",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        680,
        1220
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "f535dc05-91a8-435a-a0a5-ffb707261c2a",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        2740,
        1240
      ]
    },
    {
      "parameters": {},
      "id": "555f762b-ca6b-4769-8136-08bfd9e2f5c4",
      "name": "NoOp - Opening Conversation1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3240,
        1040
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "84581b8b-4675-426e-aad5-672763863ab7",
      "name": "Wait For Create a Conversation1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        3980,
        1200
      ]
    },
    {
      "parameters": {},
      "id": "2cc05cc9-1fae-42fb-ae3b-72bc17f8ad42",
      "name": "NoOp - Opening Conversation",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        5020,
        1280
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "101fc126-cd50-4338-8b0c-ed964d61704f",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        4780,
        1220
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "conversation.status",
              "value": "={{$json.payload.current_status}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Updated Conversation Status",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        4620,
        1040
      ],
      "id": "2686e9fd-0227-412c-b22c-502ae596acae"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content_type",
              "value": "text"
            }
          ]
        },
        "options": {}
      },
      "name": "Payload Constants",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        6120,
        1300
      ],
      "id": "5da6e9c9-1443-446e-ab5e-5f43fbe587fa"
    },
    {
      "parameters": {
        "baseUrl": "={{$json[\"extra\"][\"cwhost\"]}}",
        "accessToken": "={{$json[\"extra\"][\"utoken\"]}}",
        "resource": "contact",
        "accountId": "={{$json[\"extra\"][\"account\"]}}",
        "operation": "contactSearch",
        "contactSearchQuery": "={{$json[\"chat\"][\"id\"]}}"
      },
      "id": "e153bbdd-fc64-4b5a-85c1-cc31d469310e",
      "name": "Get Chat Contact",
      "type": "n8n-nodes-chatwoot.chatwoot",
      "typeVersion": 1,
      "position": [
        -4780,
        1560
      ],
      "notesInFlow": false
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload",
              "value": "={{$json.payload.shift()}}"
            },
            {
              "name": "meta",
              "value": "={{null}}"
            }
          ]
        },
        "options": {}
      },
      "id": "578ece8b-3a35-41ac-8679-a8522f6f9fa6",
      "name": "Get Chat Contact Response Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -4600,
        1560
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_POSTTOCHATWOOT'] }}"
      },
      "id": "60a50288-bd8d-400f-b745-cff9f994ee69",
      "name": "Execute Workflow Post To Chatwoot",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        6680,
        1320
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "content": "## Call Request ?",
        "height": 354.0653279804751,
        "width": 237.27247076935066
      },
      "id": "acfbd805-1774-495c-beef-e6a217b0d9d6",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5240,
        1160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.type}}",
              "operation": "equal",
              "value2": 8
            }
          ]
        }
      },
      "id": "a411e08d-bcc6-4008-b612-c98ceef1dfa0",
      "name": "If Call Request ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5300,
        1280
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "text",
              "value": "## (Sistema) O Usuário requisitou uma chamada de voz !\n----------------------------------------------------"
            }
          ],
          "boolean": [
            {
              "name": "payload.private",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "d9b89fa8-c0fd-49ed-bee4-d1fc5e7d631c",
      "name": "Set Text Content For Call Request",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        5520,
        1140
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_POSTTOWEBCALLBACK'] }}"
      },
      "id": "9faad138-fad0-451e-9b4a-1ca1ff8c7fc5",
      "name": "Throw To WebCallBack Telephony Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        5860,
        940
      ],
      "executeOnce": true,
      "continueOnFail": true
    },
    {
      "parameters": {},
      "id": "4983f941-d35d-40db-9835-23a16a3ee5e6",
      "name": "Deliver Chat Contact Payload",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2920,
        1360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json?.chat}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "e9522a8b-d9ac-41de-bede-6f6924b3b84e",
      "name": "If Chat Exists ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -2340,
        1200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "34b3e600-97b7-4ca4-8d11-c2b32b883fac",
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -3840,
        1680
      ]
    },
    {
      "parameters": {
        "amount": "={{ (Math.random() * 5) + 1 }}",
        "unit": "seconds"
      },
      "id": "8bb4e34b-3641-4b03-9551-d2267709e26c",
      "name": "Wait a while (5s)",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        -2920,
        1540
      ],
      "webhookId": "94c8f44e-8e77-430b-8cb2-1e8a2ddff8a0"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "chat.chatwoot.source_id",
              "value": "={{$json.chat.hex}}"
            },
            {
              "name": "chat.chatwoot.skipgreetings",
              "value": "={{ $json.payload.custom_attributes?.skipgreetings ?? false }}"
            }
          ],
          "number": [
            {
              "name": "chat.chatwoot.id",
              "value": "={{$json.payload.id}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set SourceId and PayloadId",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -4000,
        1360
      ],
      "id": "b96e8f9e-94f8-46e6-9e6e-fbdb0e4393a2"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "chat.chatwoot.source_id",
              "value": "={{$json.payload.contact_inbox.source_id}}"
            }
          ],
          "number": [
            {
              "name": "chat.chatwoot.id",
              "value": "={{$json.payload.contact.id}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Created Chat Contact Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -3180,
        1660
      ],
      "id": "e2a3c29b-58dd-456a-a700-8ad8e29a7338"
    },
    {
      "parameters": {
        "errorMessage": "Error on create contact (expected 422)"
      },
      "id": "ed5aa78d-f97f-4ac4-bc48-b9ba6bb1229d",
      "name": "! Unknown Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -3440,
        1840
      ]
    },
    {
      "parameters": {
        "values": {
          "number": [
            {
              "name": "attempts",
              "value": "={{ ($json.attempts ?? 0) + 1 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "38279bec-050a-4a99-b80c-e14990ea7533",
      "name": "Set Increment For Conversations Attempts",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1280,
        1420
      ]
    },
    {
      "parameters": {
        "amount": "={{ (Math.random() * 5) + 1 }}",
        "unit": "seconds"
      },
      "id": "45cdde8d-9542-4c23-8da2-2ae2f51a1e12",
      "name": "Wait a while (5s) For Conversation",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        2340,
        1620
      ],
      "webhookId": "13d982e4-e253-4616-9e0a-3da472be5e56"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "conversation.id",
              "value": "={{$json.payload?.id}}"
            },
            {
              "name": "conversation.status",
              "value": "={{$json.payload?.status}}"
            }
          ]
        },
        "options": {}
      },
      "id": "834c3dd9-7f83-4655-9502-68f55de7adef",
      "name": "Set Conversation Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        2340,
        1420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.payload }}",
              "operation": "isNotEmpty"
            }
          ],
          "number": [
            {
              "value1": "={{ $json.attempts ?? 0 }}",
              "operation": "larger",
              "value2": 2
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "2d839d75-109b-4a7f-89a4-8f1917158f9f",
      "name": "If Conversation Found Or Max Attempts Reached ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2100,
        1440
      ]
    },
    {
      "parameters": {
        "values": {
          "number": [
            {
              "name": "attempts",
              "value": "={{ ($json.attempts ?? 0) + 1 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "0eb1ba1b-d069-4a51-a455-909dc60d382f",
      "name": "Set Increment For Chat Contact Attempt",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -4960,
        1480
      ]
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "977154af-7b4b-4853-a630-2fd8994daef9",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        -3460,
        1540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.error ?? \"\" }}",
              "operation": "contains",
              "value2": "could not be processed"
            }
          ],
          "number": [
            {
              "value1": "={{ $json.attempts ?? 0 }}",
              "value2": 2
            }
          ]
        }
      },
      "id": "47975893-7c34-40f5-8f2b-5ad6256d919d",
      "name": "If Error 422 And Has Attempts Remaning ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -3660,
        1740
      ],
      "executeOnce": false
    },
    {
      "parameters": {},
      "id": "c3140a8b-7788-4910-9c91-c1681be8b94e",
      "name": "Retry To Chat Contact",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2920,
        1820
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "={{$json.text}}"
            },
            {
              "name": "payload.message_type",
              "value": "={{$json.fromme?\"outgoing\":\"incoming\"}}"
            },
            {
              "name": "payload.echo_id",
              "value": "={{$json.id}}"
            },
            {
              "name": "payload.content_attributes.items.quepasa.msgid",
              "value": "={{ $json.id }}"
            },
            {
              "name": "payload.content_attributes.in_reply_to",
              "value": "={{ $json.inreply }}"
            },
            {
              "name": "payload.attachment",
              "value": "={{$json.attachment}}"
            },
            {
              "name": "chatid",
              "value": "={{$json.chat.id}}"
            },
            {
              "name": "conversation",
              "value": "={{$json.conversation}}"
            },
            {
              "name": "extra",
              "value": "={{$json.extra}}"
            },
            {
              "name": "hex",
              "value": "={{$json.chat.chatwoot.source_id}}"
            },
            {
              "name": "participant.title",
              "value": "={{$json.participant?.title}}"
            },
            {
              "name": "payload.external_created_at",
              "value": "={{ new Date($json.timestamp).getTime() / 1000 }}"
            }
          ],
          "boolean": [
            {
              "name": "payload.private",
              "value": "={{ $json.payload?.private ?? false }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Chatwoot Message Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        5860,
        1300
      ],
      "id": "38989bac-1f8f-4125-b818-4a6a0537fb16"
    }
  ],
  "pinData": {},
  "connections": {
    "Has Participant ?": {
      "main": [
        [
          {
            "node": "GetAndCreate Participant",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Clearing Participant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Participant Contact": {
      "main": [
        [
          {
            "node": "Deliver Participant Contact Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open ?": {
      "main": [
        [
          {
            "node": "Open a Conversation",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "NoOp - Opening Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a Conversation": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait For Create a Conversation",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "Wait For Create a Conversation1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open a Conversation": {
      "main": [
        [
          {
            "node": "Set Updated Conversation Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Conversation": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Not Broadcast ?": {
      "main": [
        [
          {
            "node": "Clearing Payload For Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Broadcast Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook Chatwoot": {
      "main": [
        [
          {
            "node": "Not Broadcast ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GetAndCreate Participant": {
      "main": [
        [
          {
            "node": "If Get Participant Sucess ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Create a New Conversation Thread ?": {
      "main": [
        [
          {
            "node": "NoOp - Opening Conversation1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait For Create a Conversation1",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Open ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Invite Command": {
      "main": [
        [
          {
            "node": "Throw To Quepasa Chat Control Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow Post To Chatwoot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Send Greetings ?": {
      "main": [
        [
          {
            "node": "Wait For Create a Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait For Create a Conversation": {
      "main": [
        [
          {
            "node": "Throw To Greetings Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Filter Conversation Parameters": {
      "main": [
        [
          {
            "node": "Set Increment For Conversations Attempts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Follow To Chat Contact Create": {
      "main": [
        [
          {
            "node": "If Chat Contact Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Chat Contact": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clearing Participant": {
      "main": [
        [
          {
            "node": "Deliver Participant Contact Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clearing Payload For Contacts": {
      "main": [
        [
          {
            "node": "Cover Ids & Set Phone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cover Ids & Set Phone": {
      "main": [
        [
          {
            "node": "Set Increment For Chat Contact Attempt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Participant Payload": {
      "main": [
        [
          {
            "node": "Has Participant ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clearing Payload For Workflow": {
      "main": [
        [
          {
            "node": "Clearing Payload For Contacts",
            "type": "main",
            "index": 0
          },
          {
            "node": "Parameters + Contacts1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Get Participant Sucess ?": {
      "main": [
        [
          {
            "node": "Set Participant Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Chat Contact Exists": {
      "main": [
        [
          {
            "node": "Set SourceId and PayloadId",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Create Chat Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parameters + Contacts1": {
      "main": [
        [
          {
            "node": "If Chat Exists ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Group ?": {
      "main": [
        [
          {
            "node": "Set Participant Payload",
            "type": "main",
            "index": 0
          },
          {
            "node": "Parameters + Contacts",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "new payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deliver Participant Contact Payload": {
      "main": [
        [
          {
            "node": "Parameters + Contacts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parameters + Contacts": {
      "main": [
        [
          {
            "node": "new payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new payload": {
      "main": [
        [
          {
            "node": "Set Filter Conversation Parameters",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Should Create a New Conversation Thread ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp - Opening Conversation1": {
      "main": [
        [
          {
            "node": "Create a Conversation",
            "type": "main",
            "index": 0
          },
          {
            "node": "Should Send Greetings ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait For Create a Conversation1": {
      "main": [
        [
          {
            "node": "Open ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp - Opening Conversation": {
      "main": [
        [
          {
            "node": "If Call Request ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "NoOp - Opening Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Updated Conversation Status": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Payload Constants": {
      "main": [
        [
          {
            "node": "If Invite Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Chat Contact": {
      "main": [
        [
          {
            "node": "Get Chat Contact Response Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Chat Contact Response Payload": {
      "main": [
        [
          {
            "node": "Follow To Chat Contact Create",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If Call Request ?": {
      "main": [
        [
          {
            "node": "Set Text Content For Call Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chatwoot Message Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Text Content For Call Request": {
      "main": [
        [
          {
            "node": "Throw To WebCallBack Telephony Workflow",
            "type": "main",
            "index": 0
          },
          {
            "node": "Chatwoot Message Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deliver Chat Contact Payload": {
      "main": [
        [
          {
            "node": "Parameters + Contacts1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If Chat Exists ?": {
      "main": [
        [
          {
            "node": "If Group ?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop And Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "Set Created Chat Contact Info",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Error 422 And Has Attempts Remaning ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set SourceId and PayloadId": {
      "main": [
        [
          {
            "node": "Deliver Chat Contact Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Created Chat Contact Info": {
      "main": [
        [
          {
            "node": "Deliver Chat Contact Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait a while (5s)": {
      "main": [
        [
          {
            "node": "Retry To Chat Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Increment For Conversations Attempts": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Filter Open|Pend|Snooze",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Conversation Payload": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Wait a while (5s) For Conversation": {
      "main": [
        [
          {
            "node": "Set Increment For Conversations Attempts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Conversation Found Or Max Attempts Reached ?": {
      "main": [
        [
          {
            "node": "Set Conversation Payload",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait a while (5s) For Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Open|Pend|Snooze": {
      "main": [
        [
          {
            "node": "If Conversation Found Or Max Attempts Reached ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Increment For Chat Contact Attempt": {
      "main": [
        [
          {
            "node": "Follow To Chat Contact Create",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Chat Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Wait a while (5s)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Error 422 And Has Attempts Remaning ?": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "! Unknown Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retry To Chat Contact": {
      "main": [
        [
          {
            "node": "Set Increment For Chat Contact Attempt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chatwoot Message Payload": {
      "main": [
        [
          {
            "node": "Payload Constants",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "versionId": "f83b4344-7e51-4120-85c9-57dd72657de0",
  "id": "10",
  "meta": {
    "instanceId": "a37a29af0b164c10f8b7ef0e4d5577d19b80c64c836f6cd90dd302c84a178489"
  },
  "tags": [
    {
      "createdAt": "2023-05-15T19:41:05.629Z",
      "updatedAt": "2023-05-15T19:41:05.629Z",
      "id": "5",
      "name": "codeleaks"
    }
  ]
}